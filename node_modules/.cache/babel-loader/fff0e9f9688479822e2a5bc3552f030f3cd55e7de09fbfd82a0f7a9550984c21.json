{"ast":null,"code":"import React from'react';import{json,checkStatus}from'./util';import{jsxs as _jsxs,jsx as _jsx}from\"react/jsx-runtime\";class Graph extends React.Component{constructor(props){super(props);const today=new Date();const lastMonth=new Date();lastMonth.setMonth(today.getMonth()-1);// Set date to 1 month ago\nthis.state={timeSeries:{},today:today.toISOString().split('T')[0],// Format date as YYYY-MM-DD\nlastMonth:lastMonth.toISOString().split('T')[0],error:''};}componentDidMount(){const{baseCurrency,targetCurrency}=this.props.match.params;// Get params from URL error\nconst{lastMonth,today}=this.state;// Fetch time series data for the selected currency pair over the past month\nfetch(`https://api.frankfurter.app/${lastMonth}..${today}?from=${baseCurrency}&to=${targetCurrency}`).then(checkStatus).then(json).then(data=>{if(data){this.setState({timeSeries:data.rates,error:''});}else{throw new Error('Failed to fetch data');}}).catch(error=>{this.setState({error:error.message});console.error('Error fetching time series data:',error);});}render(){const{timeSeries,error}=this.state;const{baseCurrency,targetCurrency}=this.props.match.params;return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsxs(\"h2\",{children:[\"Time Series for \",baseCurrency,\" to \",targetCurrency]}),error?/*#__PURE__*/_jsx(\"p\",{children:error}):/*#__PURE__*/_jsxs(\"table\",{className:\"table table-striped\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Date\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Rate\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:Object.entries(timeSeries).map(_ref=>{let[date,rates]=_ref;return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:date}),/*#__PURE__*/_jsx(\"td\",{children:rates[targetCurrency]})]},date);})})]})]});}}export default Graph;","map":{"version":3,"names":["React","json","checkStatus","jsxs","_jsxs","jsx","_jsx","Graph","Component","constructor","props","today","Date","lastMonth","setMonth","getMonth","state","timeSeries","toISOString","split","error","componentDidMount","baseCurrency","targetCurrency","match","params","fetch","then","data","setState","rates","Error","catch","message","console","render","className","children","Object","entries","map","_ref","date"],"sources":["/Users/ravichasuksawasdinaayuthaya/Fullstack Practice/Altcademy/ReactJS-SPA/Currency-converter-ReactJS/src/graph.js"],"sourcesContent":["import React from 'react';\nimport { json, checkStatus } from './util';\n\nclass Graph extends React.Component {\n  constructor(props) {\n    super(props);\n    const today = new Date();\n    const lastMonth = new Date();\n    lastMonth.setMonth(today.getMonth() - 1);  // Set date to 1 month ago\n\n    this.state = {\n      timeSeries: {},\n      today: today.toISOString().split('T')[0],  // Format date as YYYY-MM-DD\n      lastMonth: lastMonth.toISOString().split('T')[0],\n      error: '',\n    };\n  }\n\n  componentDidMount() {\n    const { baseCurrency, targetCurrency } = this.props.match.params;  // Get params from URL error\n    const { lastMonth, today } = this.state;\n\n    // Fetch time series data for the selected currency pair over the past month\n    fetch(`https://api.frankfurter.app/${lastMonth}..${today}?from=${baseCurrency}&to=${targetCurrency}`)\n      .then(checkStatus)\n      .then(json)\n      .then((data) => {\n        if (data) {\n          this.setState({ timeSeries: data.rates, error: '' });\n        } else {\n          throw new Error('Failed to fetch data');\n        }\n      })\n      .catch((error) => {\n        this.setState({ error: error.message });\n        console.error('Error fetching time series data:', error);\n      });\n  }\n\n  render() {\n    const { timeSeries, error } = this.state;\n    const { baseCurrency, targetCurrency } = this.props.match.params;\n\n    return (\n      <div className=\"container\">\n        <h2>Time Series for {baseCurrency} to {targetCurrency}</h2>\n        {error ? (\n          <p>{error}</p>\n        ) : (\n          <table className=\"table table-striped\">\n            <thead>\n              <tr>\n                <th>Date</th>\n                <th>Rate</th>\n              </tr>\n            </thead>\n            <tbody>\n              {Object.entries(timeSeries).map(([date, rates]) => (\n                <tr key={date}>\n                  <td>{date}</td>\n                  <td>{rates[targetCurrency]}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Graph;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}