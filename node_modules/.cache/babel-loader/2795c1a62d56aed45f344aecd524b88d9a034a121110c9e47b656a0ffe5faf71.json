{"ast":null,"code":"var _jsxFileName = \"/Users/ravichasuksawasdinaayuthaya/Fullstack Practice/Altcademy/ReactJS-SPA/Currency-converter-ReactJS/src/cal.js\";\nimport React from 'react';\nimport { json, checkStatus } from './util';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Conv extends React.Component {\n  constructor(props) {\n    super(props);\n    // When left input changes (base currency amount)\n    this.handleLeftChange = e => {\n      const leftCur = e.target.value;\n      this.setState({\n        leftCur,\n        rightCur: this.toRight(leftCur, this.state.rate)\n      });\n    };\n    // When right input changes (target currency amount)\n    this.handleRightChange = e => {\n      const rightCur = e.target.value;\n      this.setState({\n        rightCur,\n        leftCur: this.toLeft(rightCur, this.state.rate)\n      });\n    };\n    // Handle selecting new base currency (left side)\n    this.handleBaseCurrencyChange = currency => {\n      this.setState({\n        baseCurrency: currency\n      }, () => this.fetchRate(currency, this.state.targetCurrency));\n    };\n    // Handle selecting new target currency (right side)\n    this.handleTargetCurrencyChange = currency => {\n      this.setState({\n        targetCurrency: currency\n      }, () => this.fetchRate(this.state.baseCurrency, currency));\n    };\n    this.state = {\n      rate: 1,\n      // Default exchange rate (USD to USD)\n      leftCur: 1,\n      // Left input value\n      rightCur: 1,\n      // Right input value\n      baseCurrency: 'USD',\n      // Default base currency (left)\n      targetCurrency: 'EUR',\n      // Default target currency (right)\n      currencies: [] // List of available currencies\n    };\n  }\n\n  // Function to fetch available currencies and exchange rate\n  fetchCurrencies() {\n    fetch('https://api.frankfurter.app/currencies').then(checkStatus).then(json).then(data => {\n      const currencies = Object.keys(data);\n      this.setState({\n        currencies\n      });\n    }).catch(error => console.error('Error fetching currency list:', error));\n  }\n  fetchRate(baseCurrency, targetCurrency) {\n    fetch(`https://api.frankfurter.app/latest?base=${baseCurrency}&symbols=${targetCurrency}`).then(checkStatus).then(json).then(data => {\n      const rate = data.rates[targetCurrency];\n      this.setState({\n        rate,\n        rightCur: this.toRight(this.state.leftCur, rate) // Update the right input value based on new rate\n      });\n    }).catch(error => console.error('Error fetching exchange rate:', error));\n  }\n  // Convert from base currency to target currency\n  toRight(amount, rate) {\n    return amount * rate;\n  }\n\n  // Convert from target currency to base currency\n  toLeft(amount, rate) {\n    return amount * (1 / rate);\n  }\n  componentDidMount() {\n    // Fetch available currencies and initial exchange rate (USD to EUR)\n    this.fetchCurrencies();\n    this.fetchRate(this.state.baseCurrency, this.state.targetCurrency);\n  }\n  render() {\n    const {\n      rate,\n      leftCur,\n      rightCur,\n      baseCurrency,\n      targetCurrency,\n      currencies\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center p-3 mb-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"mb-2\",\n          children: \"Currency Converter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [baseCurrency, \" 1 : \", rate, \" \", targetCurrency]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropdown col-3 text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary dropdown-toggle\",\n            \"data-bs-toggle\": \"dropdown\",\n            children: baseCurrency\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"dropdown-menu\",\n            children: currencies.map(currency => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"dropdown-item\",\n                onClick: () => this.handleBaseCurrencyChange(currency),\n                children: currency\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 19\n              }, this)\n            }, currency, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-6 text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            value: leftCur,\n            onChange: this.handleLeftChange,\n            type: \"number\",\n            className: \"form-control\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"mx-3\",\n            children: \"=\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            value: rightCur,\n            onChange: this.handleRightChange,\n            type: \"number\",\n            className: \"form-control\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropdown col-3 text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary dropdown-toggle\",\n            \"data-bs-toggle\": \"dropdown\",\n            children: targetCurrency\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"dropdown-menu\",\n            children: currencies.map(currency => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"dropdown-item\",\n                onClick: () => this.handleTargetCurrencyChange(currency),\n                children: currency\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 19\n              }, this)\n            }, currency, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default Conv;","map":{"version":3,"names":["React","json","checkStatus","jsxDEV","_jsxDEV","Conv","Component","constructor","props","handleLeftChange","e","leftCur","target","value","setState","rightCur","toRight","state","rate","handleRightChange","toLeft","handleBaseCurrencyChange","currency","baseCurrency","fetchRate","targetCurrency","handleTargetCurrencyChange","currencies","fetchCurrencies","fetch","then","data","Object","keys","catch","error","console","rates","amount","componentDidMount","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","onChange","type"],"sources":["/Users/ravichasuksawasdinaayuthaya/Fullstack Practice/Altcademy/ReactJS-SPA/Currency-converter-ReactJS/src/cal.js"],"sourcesContent":["import React from 'react';\nimport { json, checkStatus } from './util';\n\nclass Conv extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      rate: 1,                // Default exchange rate (USD to USD)\n      leftCur: 1,             // Left input value\n      rightCur: 1,            // Right input value\n      baseCurrency: 'USD',    // Default base currency (left)\n      targetCurrency: 'EUR',  // Default target currency (right)\n      currencies: [],         // List of available currencies\n    };\n  }\n\n  // Function to fetch available currencies and exchange rate\n  fetchCurrencies() {\n    fetch('https://api.frankfurter.app/currencies')\n      .then(checkStatus)\n      .then(json)\n      .then(data => {\n        const currencies = Object.keys(data);\n        this.setState({ currencies });\n      })\n      .catch(error => console.error('Error fetching currency list:', error));\n  }\n\n  fetchRate(baseCurrency, targetCurrency) {\n    fetch(`https://api.frankfurter.app/latest?base=${baseCurrency}&symbols=${targetCurrency}`)\n      .then(checkStatus)\n      .then(json)\n      .then(data => {\n        const rate = data.rates[targetCurrency];\n        this.setState({\n          rate,\n          rightCur: this.toRight(this.state.leftCur, rate), // Update the right input value based on new rate\n        });\n      })\n      .catch(error => console.error('Error fetching exchange rate:', error));\n  }\n\n  // When left input changes (base currency amount)\n  handleLeftChange = (e) => {\n    const leftCur = e.target.value;\n    this.setState({\n      leftCur,\n      rightCur: this.toRight(leftCur, this.state.rate),\n    });\n  };\n\n  // When right input changes (target currency amount)\n  handleRightChange = (e) => {\n    const rightCur = e.target.value;\n    this.setState({\n      rightCur,\n      leftCur: this.toLeft(rightCur, this.state.rate),\n    });\n  };\n\n  // Convert from base currency to target currency\n  toRight(amount, rate) {\n    return amount * rate;\n  }\n\n  // Convert from target currency to base currency\n  toLeft(amount, rate) {\n    return amount * (1 / rate);\n  }\n\n  // Handle selecting new base currency (left side)\n  handleBaseCurrencyChange = (currency) => {\n    this.setState(\n      { baseCurrency: currency },\n      () => this.fetchRate(currency, this.state.targetCurrency)\n    );\n  };\n\n  // Handle selecting new target currency (right side)\n  handleTargetCurrencyChange = (currency) => {\n    this.setState(\n      { targetCurrency: currency },\n      () => this.fetchRate(this.state.baseCurrency, currency)\n    );\n  };\n\n  componentDidMount() {\n    // Fetch available currencies and initial exchange rate (USD to EUR)\n    this.fetchCurrencies();\n    this.fetchRate(this.state.baseCurrency, this.state.targetCurrency);\n  }\n\n  render() {\n    const { rate, leftCur, rightCur, baseCurrency, targetCurrency, currencies } = this.state;\n\n    return (\n      <div className=\"container\">\n        <div className=\"text-center p-3 mb-2\">\n          <h2 className=\"mb-2\">Currency Converter</h2>\n          <h4>{baseCurrency} 1 : {rate} {targetCurrency}</h4>\n        </div>\n        <div className=\"row align-items-center\">\n          {/* Base currency dropdown */}\n          <div className=\"dropdown col-3 text-center\">\n            <button className=\"btn btn-primary dropdown-toggle\" data-bs-toggle=\"dropdown\">\n              {baseCurrency}\n            </button>\n            <ul className=\"dropdown-menu\">\n              {currencies.map(currency => (\n                <li key={currency}>\n                  <button\n                    className=\"dropdown-item\"\n                    onClick={() => this.handleBaseCurrencyChange(currency)}\n                  >\n                    {currency}\n                  </button>\n                </li>\n              ))}\n            </ul>\n          </div>\n\n          {/* Input fields for currency amounts */}\n          <div className=\"col-6 text-center\">\n            <input\n              value={leftCur}\n              onChange={this.handleLeftChange}\n              type=\"number\"\n              className=\"form-control\"\n            />\n            <span className=\"mx-3\">=</span>\n            <input\n              value={rightCur}\n              onChange={this.handleRightChange}\n              type=\"number\"\n              className=\"form-control\"\n            />\n          </div>\n\n          {/* Target currency dropdown */}\n          <div className=\"dropdown col-3 text-center\">\n            <button className=\"btn btn-primary dropdown-toggle\" data-bs-toggle=\"dropdown\">\n              {targetCurrency}\n            </button>\n            <ul className=\"dropdown-menu\">\n              {currencies.map(currency => (\n                <li key={currency}>\n                  <button\n                    className=\"dropdown-item\"\n                    onClick={() => this.handleTargetCurrencyChange(currency)}\n                  >\n                    {currency}\n                  </button>\n                </li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Conv;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}